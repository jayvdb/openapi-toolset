openapi: 3.0.0
info:
  title: DjangoAPI
  description: this is a auto generatead doc by openapi-toolset
  version: 1.0.0
servers:
- url: https://development.gigantic-server.com/v1
  description: Development server
- url: https://staging.gigantic-server.com/v1
  description: Staging server
- url: https://api.gigantic-server.com/v1
  description: Production server
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
      - pets
      parameters:
      - name: limit
        in: query
        description: How many items to return at one time (max 100)
        required: false
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pets'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a pet
      operationId: createPets
      tags:
      - pets
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/{pet_id}:
    parameters:
    - name: pet_id
      in: path
      required: true
      description: The id of the pet to retrieve
      schema:
        type: string
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
      - pets
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Pet:
      type: object
      required:
      - id
      - name
      - photos
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        photos:
          type: array
          items:
            $ref: '#/components/schemas/Photo'
    Pets:
      type: array
      items:
        $ref: '#/components/schemas/Pet'
    Photo:
      type: object
      properties:
        timestamp:
          type: integer
        url:
          type: string
        description:
          type: string
          nullable: true
    Error:
      type: object
      required:
      - code
      - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
